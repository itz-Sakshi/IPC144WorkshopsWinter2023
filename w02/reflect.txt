///////////////////////////////////////////////////////////////////////////

                              Reflection
                             Workshop - #2
Full Name  : Sakshi Sakshi
Student ID#: 112602222
Email      : ssakshi7@myseneca.ca
Section    : NFF 

Authenticity Declaration:

I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

1. The output of this program in case of price1 does not represent the intended value because 
 the data-type of price1 is 'float'. Floating point values provide less precision in calculations than doubles because they occupy 4 bytes of memory space whereas doubles 
 take 8 bytes of memory space. Consequently, this sometimes, leads to unexpected results while performing calculations as in case of price1. Therefore, it is not recommended to use variables of 'float' data-type in programs requiring precisely calculated results.

2. All the given examples work as intended because in the first example, the 'money' variable undergoes implicit coercion by the compiler and it automatically becomes double whereas,
 in the second example, the money variable and the '100' value gets converted into double data type implicitly and explicitly, respectively. However, in the last printf statement, the money variable is explicitly typecasted into double type from integer datatype while the '100' value undergoes implicit coercion during the compiling process. 

3. a. The value of result is 72 because the 'result' variable is an integer, therefore truncation happens and it disregards any value after the decimal point.
   b. 1. 0.00
      2. 72
      3. 0.00
      4. 72
   c. The printf statement displays only those values accurately that are given according to the format specifiers given inside the double quotes. Otherwise, if the format specifier and the variable does not match, the user will get unintended values.
